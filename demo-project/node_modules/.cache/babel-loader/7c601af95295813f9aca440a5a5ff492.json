{"ast":null,"code":"var _jsxFileName = \"U:\\\\Proyecto_Demo\\\\React JS project\\\\demo-project\\\\src\\\\components\\\\EmpleadoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { EmpleadoContext } from '../contexts/EmpleadoContext';\nimport { Dialog } from \"primereact/dialog\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Dropdown } from 'primereact/dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmpleadoForm = props => {\n  _s();\n\n  const initialMateriaState = {\n    id: \"1\",\n    materia: \"matematicas\"\n  };\n  const [selectedMateria, setSelectedMateria] = useState(initialMateriaState);\n  const {\n    isVisible,\n    setIsVisible\n  } = props;\n  const {\n    createEmpleado,\n    deleteEmpleado,\n    editEmpleado,\n    updateEmpleado,\n    materias,\n    editMateria\n  } = useContext(EmpleadoContext);\n  const initialEmpleadoState = {\n    idTCalificaciones: 0,\n    alumnoId: \"1\",\n    materiaId: \"1\",\n    alumnoNombre: \"Jhon\",\n    materiaNombre: \"matematicas\",\n    calificacion: \"\",\n    fechaRegistro: null\n  };\n  const [empleadoData, setEmpleadoData] = useState(initialEmpleadoState);\n  useEffect(() => {\n    if (editEmpleado) {\n      setEmpleadoData(editEmpleado);\n      setSelectedMateria(editMateria);\n    }\n\n    ;\n  }, [editEmpleado]);\n\n  const updateField = (data, field) => {\n    setEmpleadoData({ ...empleadoData,\n      [field]: data\n    });\n    console.log(empleadoData);\n  };\n\n  const updateFieldCombo = (data, field) => {\n    setEmpleadoData({ ...empleadoData,\n      [field]: data.id\n    }); //console.log(data)\n    // console.log(field)\n    // console.log(fieldCombo)\n    // console.log(selectedMateria)\n\n    setSelectedMateria(data); //console.log(selectedMateria)\n  };\n\n  const _deleteEmpleado = () => {\n    if (editEmpleado) {\n      deleteEmpleado(empleadoData.idTCalificaciones);\n      setEmpleadoData(initialEmpleadoState);\n    }\n\n    setIsVisible(false);\n  };\n\n  const saveEmpleado = () => {\n    if (!editEmpleado) {\n      createEmpleado(empleadoData);\n    } else {\n      updateEmpleado(empleadoData);\n    }\n\n    setEmpleadoData(initialEmpleadoState);\n    setIsVisible(false);\n  };\n\n  const dialogFooter = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui-dialog-buttonpane p-clearfix\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Delete\",\n      icon: \"pi pi-times\",\n      onClick: _deleteEmpleado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Save\",\n      icon: \"pi pi-check\",\n      onClick: saveEmpleado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n\n  const clearSelected = () => {\n    setIsVisible(false);\n    setEmpleadoData(initialEmpleadoState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      visible: isVisible,\n      modal: true,\n      style: {\n        width: \"420px\"\n      },\n      contentStyle: {\n        overflow: \"visible\"\n      },\n      header: \"Calificaci\\xF3n\",\n      onHide: () => clearSelected(),\n      footer: dialogFooter,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-grid p-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            value: empleadoData.alumnoNombre,\n            onChange: e => updateField(e.target.value.trim(), \"nombreCompleto\"),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Alumno:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            value: selectedMateria,\n            onChange: e => updateFieldCombo(e.value, \"materiaId\") //onChange={(e) => setSelectedMateria(e.value)}\n            ,\n            options: materias,\n            optionLabel: \"materia\",\n            inputId: \"id\" //placeholder=\"Select a City\" \n            ,\n            className: \"w-full md:w-14rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Materia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            value: empleadoData.calificacion,\n            onChange: e => updateField(e.target.value, \"calificacion\") // mode=\"currency\"\n            //currency='USD'\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Calificaci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            value: empleadoData.alumnoId,\n            onChange: e => updateField(e.target.value.trim(), \"alumnoId\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"AlumnoId:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-float-label\",\n          children: [/*#__PURE__*/_jsxDEV(InputText, {\n            value: empleadoData.fechaRegistro,\n            onChange: e => updateField(e.target.value, \"fechaRegistro\"),\n            readOnly: true // dateFormat=\"yy-mm-dd\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Fecha de Registro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmpleadoForm, \"wzTax2SBiKiS7Kqmz/FSAc5yRlU=\");\n\n_c = EmpleadoForm;\nexport default EmpleadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmpleadoForm\");","map":{"version":3,"sources":["U:/Proyecto_Demo/React JS project/demo-project/src/components/EmpleadoForm.jsx"],"names":["React","useContext","useState","useEffect","EmpleadoContext","Dialog","Button","InputText","InputNumber","Calendar","Dropdown","EmpleadoForm","props","initialMateriaState","id","materia","selectedMateria","setSelectedMateria","isVisible","setIsVisible","createEmpleado","deleteEmpleado","editEmpleado","updateEmpleado","materias","editMateria","initialEmpleadoState","idTCalificaciones","alumnoId","materiaId","alumnoNombre","materiaNombre","calificacion","fechaRegistro","empleadoData","setEmpleadoData","updateField","data","field","console","log","updateFieldCombo","_deleteEmpleado","saveEmpleado","dialogFooter","clearSelected","width","overflow","e","target","value","trim"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\r\nimport { EmpleadoContext } from '../contexts/EmpleadoContext';\r\nimport {Dialog} from \"primereact/dialog\";\r\nimport {Button} from \"primereact/button\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {InputNumber} from \"primereact/inputnumber\";\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst EmpleadoForm = (props) =>{\r\n\r\n    \r\n    const initialMateriaState = {\r\n        id: \"1\",\r\n        materia:\"matematicas\"\r\n    }\r\n    \r\n\r\n\r\n    const [selectedMateria, setSelectedMateria] = useState(initialMateriaState);\r\n\r\n    const {isVisible, setIsVisible} = props;\r\n    const {\r\n        createEmpleado,\r\n        deleteEmpleado,\r\n        editEmpleado,\r\n        updateEmpleado,\r\n        materias,\r\n        editMateria\r\n    } = useContext(EmpleadoContext);\r\n\r\n    const initialEmpleadoState = {\r\n        idTCalificaciones: 0,\r\n        alumnoId:\"1\",\r\n        materiaId:\"1\",\r\n        alumnoNombre:\"Jhon\",\r\n        materiaNombre: \"matematicas\",\r\n        calificacion: \"\",\r\n        fechaRegistro: null,\r\n    }\r\n    \r\n    const [empleadoData, setEmpleadoData] = useState(initialEmpleadoState);\r\n\r\n    useEffect(() =>{\r\n        if(editEmpleado) \r\n        {\r\n            setEmpleadoData(editEmpleado)\r\n           \r\n            setSelectedMateria(editMateria)\r\n        };\r\n    }, [editEmpleado])\r\n\r\n\r\n    const updateField = (data, field) =>{\r\n        setEmpleadoData({\r\n            ...empleadoData,\r\n            [field]:data\r\n        })\r\n\r\n        console.log(empleadoData)\r\n\r\n    }\r\n\r\n    const updateFieldCombo = (data, field) =>{\r\n        \r\n\r\n        setEmpleadoData({\r\n             ...empleadoData,\r\n             [field]:data.id\r\n         })\r\n\r\n        //console.log(data)\r\n        // console.log(field)\r\n        // console.log(fieldCombo)\r\n        // console.log(selectedMateria)\r\n\r\n        setSelectedMateria(data)\r\n\r\n        //console.log(selectedMateria)\r\n\r\n    }\r\n\r\n    const _deleteEmpleado = () => {\r\n        if (editEmpleado) {\r\n            deleteEmpleado(empleadoData.idTCalificaciones);\r\n          setEmpleadoData(initialEmpleadoState);\r\n        }\r\n        setIsVisible(false);\r\n      };\r\n\r\n    const saveEmpleado = () => {\r\n      \r\n    if (!editEmpleado) {\r\n            createEmpleado(empleadoData);\r\n        } else {\r\n            updateEmpleado(empleadoData);\r\n          }\r\n\r\n        setEmpleadoData(initialEmpleadoState);\r\n        setIsVisible(false);\r\n    }\r\n\r\n    const dialogFooter = (\r\n        <div className='ui-dialog-buttonpane p-clearfix'>\r\n        <Button label=\"Delete\" icon=\"pi pi-times\" onClick={_deleteEmpleado} />\r\n            <Button label='Save' icon=\"pi pi-check\" onClick={saveEmpleado}/>\r\n        </div>\r\n\r\n    )\r\n\r\n    const clearSelected = () => {\r\n        setIsVisible(false);\r\n        setEmpleadoData(initialEmpleadoState);\r\n      };\r\n    \r\n\r\nreturn (<div>\r\n    <Dialog\r\n        visible={isVisible}\r\n        modal={true}\r\n        style={{width:\"420px\"}}\r\n        contentStyle={{overflow:\"visible\"}}\r\n        header=\"Calificación\"\r\n        onHide={() => clearSelected()}\r\n        footer={dialogFooter}\r\n    >\r\n        <div className='p-grid p-fluid'>\r\n            <br/>\r\n            <div className='p-float-label'>\r\n                <InputText\r\n                    value={empleadoData.alumnoNombre}\r\n                    onChange={e => updateField(e.target.value.trim(), \"nombreCompleto\")}\r\n                    readOnly={true}\r\n                />\r\n                <label>Alumno:</label>\r\n            </div>\r\n            <br/>\r\n            <div className='p-float-label'>\r\n            <Dropdown \r\n            value={selectedMateria} \r\n            onChange={e => updateFieldCombo(e.value, \"materiaId\")}\r\n            //onChange={(e) => setSelectedMateria(e.value)}\r\n            options={materias} \r\n            optionLabel=\"materia\" \r\n            inputId=\"id\"\r\n            //placeholder=\"Select a City\" \r\n            className=\"w-full md:w-14rem\" />\r\n                <label>Materia:</label>\r\n            </div>\r\n            <br/>\r\n            <div className='p-float-label'>\r\n                <InputText\r\n                    value={empleadoData.calificacion}\r\n                    onChange={e => updateField(e.target.value, \"calificacion\")}\r\n                   // mode=\"currency\"\r\n                    //currency='USD'\r\n                />\r\n                <label>Calificación:</label>\r\n            </div>\r\n            <br/>\r\n            <div className='p-float-label'>\r\n                <InputText\r\n                    value={empleadoData.alumnoId}\r\n                    onChange={e => updateField(e.target.value.trim(), \"alumnoId\")}\r\n                />\r\n                <label>AlumnoId:</label>\r\n            </div>\r\n            <br/>\r\n            <div className='p-float-label'>\r\n                \r\n                 <InputText\r\n                    value={empleadoData.fechaRegistro}\r\n                    onChange={e => updateField(e.target.value, \"fechaRegistro\")}\r\n                    readOnly={true}\r\n                   // dateFormat=\"yy-mm-dd\"\r\n                />\r\n                <label>Fecha de Registro:</label>\r\n            </div>\r\n        </div>\r\n    </Dialog>\r\n</div>);\r\n}\r\n\r\n\r\nexport default EmpleadoForm;"]},"metadata":{},"sourceType":"module"}