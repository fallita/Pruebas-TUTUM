{"ast":null,"code":"var _jsxFileName = \"U:\\\\Proyecto_Demo\\\\React JS project\\\\demo-project\\\\src\\\\contexts\\\\EmpleadoContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { PersonaService } from '../service/PersonaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmpleadoContext = /*#__PURE__*/createContext();\n\nconst EmpleadoContextProvider = props => {\n  _s();\n\n  const materiasData = [{\n    id: \"1\",\n    materia: \"matematicas\"\n  }, {\n    id: \"2\",\n    materia: \"programacion I\"\n  }, {\n    id: \"3\",\n    materia: \"ingenieria de sofware\"\n  }];\n  const empleadoService = new PersonaService();\n  const [empleados, setEmpleados] = useState([]);\n  const [materias, setMaterias] = useState([]);\n  const [editEmpleado, setEditEmpleado] = useState(null);\n  useEffect(() => {\n    empleadoService.getAll().then(data => setEmpleados(data));\n    setEmpleados(materiasData);\n  }, []);\n\n  const createEmpleado = empleado => {\n    empleadoService.create(empleado).then(data => setEmpleados([...empleados, data]));\n  };\n\n  const deleteEmpleado = idTCalificaciones => {\n    empleadoService.delete(idTCalificaciones).then(() => setEmpleados(empleados.filter(p => p.idTCalificaciones !== idTCalificaciones)));\n  };\n\n  const findEmpleado = idTCalificaciones => {\n    const empleado = empleados.find(p => p.idTCalificaciones === idTCalificaciones);\n    setEditEmpleado(empleado);\n  };\n\n  const updateEmpleado = empleado => {\n    empleadoService.update(empleado).then(data => setEmpleados(empleados.map(p => p.idTCalificaciones === empleado.idTCalificaciones ? empleado : p)));\n    setEditEmpleado(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmpleadoContext.Provider, {\n    value: {\n      createEmpleado,\n      deleteEmpleado,\n      findEmpleado,\n      updateEmpleado,\n      editEmpleado,\n      empleados,\n      materias\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmpleadoContextProvider, \"/eCsUcwXS1+606YnrguQhe/+buA=\");\n\n_c = EmpleadoContextProvider;\nexport default EmpleadoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmpleadoContextProvider\");","map":{"version":3,"sources":["U:/Proyecto_Demo/React JS project/demo-project/src/contexts/EmpleadoContext.jsx"],"names":["React","createContext","useState","useEffect","PersonaService","EmpleadoContext","EmpleadoContextProvider","props","materiasData","id","materia","empleadoService","empleados","setEmpleados","materias","setMaterias","editEmpleado","setEditEmpleado","getAll","then","data","createEmpleado","empleado","create","deleteEmpleado","idTCalificaciones","delete","filter","p","findEmpleado","find","updateEmpleado","update","map","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,EAArC;;AAEP,MAAMK,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AAEvC,QAAMC,YAAY,GAAG,CACjB;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,OAAO,EAAE;AAFb,GADiB,EAKjB;AACID,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,OAAO,EAAE;AAFb,GALiB,EASjB;AACID,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,OAAO,EAAE;AAFb,GATiB,CAArB;AAeA,QAAMC,eAAe,GAAG,IAAIP,cAAJ,EAAxB;AAEJ,QAAM,CAACQ,SAAD,EAAWC,YAAX,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACY,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM,CAACc,YAAD,EAAcC,eAAd,IAAiCf,QAAQ,CAAC,IAAD,CAA/C;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,eAAe,CAACO,MAAhB,GAAyBC,IAAzB,CAA8BC,IAAI,IAAIP,YAAY,CAACO,IAAD,CAAlD;AACAP,IAAAA,YAAY,CAACL,YAAD,CAAZ;AACH,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMa,cAAc,GAAIC,QAAD,IAAa;AAChCX,IAAAA,eAAe,CACdY,MADD,CACQD,QADR,EAECH,IAFD,CAEOC,IAAD,IAAUP,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeQ,IAAf,CAAD,CAF5B;AAGH,GAJD;;AAMA,QAAMI,cAAc,GAAIC,iBAAD,IAAsB;AACzCd,IAAAA,eAAe,CACde,MADD,CACQD,iBADR,EAECN,IAFD,CAEM,MAAMN,YAAY,CAACD,SAAS,CAACe,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACH,iBAAF,KAAwBA,iBAAhD,CAAD,CAFxB;AAGH,GAJD;;AAMA,QAAMI,YAAY,GAAIJ,iBAAD,IAAsB;AACvC,UAAMH,QAAQ,GAAGV,SAAS,CAACkB,IAAV,CAAeF,CAAC,IAAIA,CAAC,CAACH,iBAAF,KAAwBA,iBAA5C,CAAjB;AACAR,IAAAA,eAAe,CAACK,QAAD,CAAf;AAEH,GAJD;;AAMA,QAAMS,cAAc,GAAIT,QAAD,IAAa;AAChCX,IAAAA,eAAe,CACdqB,MADD,CACQV,QADR,EAECH,IAFD,CAEOC,IAAD,IACNP,YAAY,CACRD,SAAS,CAACqB,GAAV,CAAcL,CAAC,IAAIA,CAAC,CAACH,iBAAF,KAAwBH,QAAQ,CAACG,iBAAjC,GAAqDH,QAArD,GAAgEM,CAAnF,CADQ,CAHZ;AAOAX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GATD;;AAWI,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACA,IAAA,KAAK,EAAE;AACHI,MAAAA,cADG;AAEHG,MAAAA,cAFG;AAGHK,MAAAA,YAHG;AAIHE,MAAAA,cAJG;AAKHf,MAAAA,YALG;AAMHJ,MAAAA,SANG;AAOHE,MAAAA;AAPG,KADP;AAAA,cAWKP,KAAK,CAAC2B;AAXX;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5ED;;GAAM5B,uB;;KAAAA,uB;AA8EN,eAAeA,uBAAf","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport { PersonaService } from '../service/PersonaService';\r\n\r\nexport const EmpleadoContext = createContext();\r\n\r\nconst EmpleadoContextProvider = (props) => {\r\n   \r\n    const materiasData = [\r\n        { \r\n            id: \"1\", \r\n            materia: \"matematicas\" \r\n        },\r\n        { \r\n            id: \"2\", \r\n            materia: \"programacion I\" \r\n        },\r\n        { \r\n            id: \"3\", \r\n            materia: \"ingenieria de sofware\" \r\n        }\r\n    ];\r\n\r\n    const empleadoService = new PersonaService();\r\n\r\nconst [empleados,setEmpleados] = useState([]);\r\nconst [materias,setMaterias] = useState([]);\r\n\r\nconst [editEmpleado,setEditEmpleado] = useState(null);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    empleadoService.getAll().then(data => setEmpleados(data));\r\n    setEmpleados(materiasData);\r\n},[]);\r\n\r\nconst createEmpleado = (empleado) =>{\r\n    empleadoService\r\n    .create(empleado)\r\n    .then((data) => setEmpleados([...empleados, data]))\r\n}\r\n\r\nconst deleteEmpleado = (idTCalificaciones) =>{\r\n    empleadoService\r\n    .delete(idTCalificaciones)\r\n    .then(() => setEmpleados(empleados.filter((p) => p.idTCalificaciones !== idTCalificaciones )))\r\n}\r\n\r\nconst findEmpleado = (idTCalificaciones) =>{\r\n    const empleado = empleados.find(p => p.idTCalificaciones === idTCalificaciones);\r\n    setEditEmpleado(empleado);\r\n    \r\n}\r\n\r\nconst updateEmpleado = (empleado) =>{\r\n    empleadoService\r\n    .update(empleado)\r\n    .then((data) => \r\n    setEmpleados(\r\n        empleados.map(p => p.idTCalificaciones === empleado.idTCalificaciones ? empleado : p)\r\n        ));\r\n\r\n    setEditEmpleado(null);\r\n}\r\n\r\n    return (\r\n        <EmpleadoContext.Provider\r\n        value={{\r\n            createEmpleado,\r\n            deleteEmpleado,\r\n            findEmpleado,\r\n            updateEmpleado,\r\n            editEmpleado,\r\n            empleados,\r\n            materias\r\n        }}\r\n        >\r\n            {props.children}\r\n        \r\n        </EmpleadoContext.Provider>\r\n    );\r\n};\r\n\r\nexport default EmpleadoContextProvider;"]},"metadata":{},"sourceType":"module"}